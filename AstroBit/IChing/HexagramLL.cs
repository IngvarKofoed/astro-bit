using System.Collections.Generic;
using System.Linq;

namespace AstroBit.IChing
{
    public static class HexagramLL
    {
        //public static IReadOnlyList<Hexagram> Hexagrams = new List<Hexagram>
        //{
        //    new Hexagram(1, "NAME", Trigram.Force, Trigram.Force, new [] { new HexagramLine(1, 0.0, 0.0), new HexagramLine(1, 0.0, 0.0), new HexagramLine(1, 0.0, 0.0), new HexagramLine(1, 0.0, 0.0), new HexagramLine(1, 0.0, 0.0), new HexagramLine(1, 0.0, 0.0) } )
        //};

        public static IReadOnlyList<Hexagram> Hexagrams = new List<Hexagram>
        {
            new Hexagram(1, "Force", Trigram.Force, Trigram.Force, new [] { new HexagramLine(1, 223.25, 224.1875), new HexagramLine(2, 224.1875, 225.125), new HexagramLine(3, 225.125, 226.0625), new HexagramLine(4, 226.0625, 227), new HexagramLine(5, 227, 227.9375), new HexagramLine(6, 227.9375, 228.875) } ),
            new Hexagram(2, "Field", Trigram.Field, Trigram.Field, new [] { new HexagramLine(1, 43.25, 44.1875), new HexagramLine(2, 44.1875, 45.125), new HexagramLine(3, 45.125, 46.0625), new HexagramLine(4, 46.0625, 47), new HexagramLine(5, 47, 47.9375), new HexagramLine(6, 47.9375, 48.875) } ),
            new Hexagram(3, "Sprouting", Trigram.Shake, Trigram.Gorge, new [] { new HexagramLine(1, 26.375, 27.3125), new HexagramLine(2, 27.3125, 28.25), new HexagramLine(3, 28.25, 29.1875), new HexagramLine(4, 29.1875, 30.125), new HexagramLine(5, 30.125, 31.0625), new HexagramLine(6, 31.0625, 32) } ),
            new Hexagram(4, "Enveloping", Trigram.Gorge, Trigram.Bound, new [] { new HexagramLine(1, 138.875, 139.8125), new HexagramLine(2, 139.8125, 140.75), new HexagramLine(3, 140.75, 141.6875), new HexagramLine(4, 141.6875, 142.625), new HexagramLine(5, 142.625, 143.5625), new HexagramLine(6, 143.5625, 144.5) } ),
            new Hexagram(5, "Attending", Trigram.Force, Trigram.Gorge, new [] { new HexagramLine(1, 251.375, 252.3125), new HexagramLine(2, 252.3125, 253.25), new HexagramLine(3, 253.25, 254.1875), new HexagramLine(4, 254.1875, 255.125), new HexagramLine(5, 255.125, 256.0625), new HexagramLine(6, 256.0625, 257) } ),
            new Hexagram(6, "Arguing", Trigram.Gorge, Trigram.Force, new [] { new HexagramLine(1, 172.625, 173.5625), new HexagramLine(2, 173.5625, 174.5), new HexagramLine(3, 174.5, 175.4375), new HexagramLine(4, 175.4375, 176.375), new HexagramLine(5, 176.375, 177.3125), new HexagramLine(6, 177.3125, 178.25) } ),
            new Hexagram(7, "Leading", Trigram.Gorge, Trigram.Field, new [] { new HexagramLine(1, 133.25, 134.1875), new HexagramLine(2, 134.1875, 135.125), new HexagramLine(3, 135.125, 136.0625), new HexagramLine(4, 136.0625, 137), new HexagramLine(5, 137, 137.9375), new HexagramLine(6, 137.9375, 138.875) } ),
            new Hexagram(8, "Grouping", Trigram.Field, Trigram.Gorge, new [] { new HexagramLine(1, 54.5, 55.4375), new HexagramLine(2, 55.4375, 56.375), new HexagramLine(3, 56.375, 57.3125), new HexagramLine(4, 57.3125, 58.25), new HexagramLine(5, 58.25, 59.1875), new HexagramLine(6, 59.1875, 60.125) } ),
            new Hexagram(9, "Small Accumulating", Trigram.Force, Trigram.Ground, new [] { new HexagramLine(1, 245.75, 246.6875), new HexagramLine(2, 246.6875, 247.625), new HexagramLine(3, 247.625, 248.5625), new HexagramLine(4, 248.5625, 249.5), new HexagramLine(5, 249.5, 250.4375), new HexagramLine(6, 250.4375, 251.375) } ),
            new Hexagram(10, "Treading", Trigram.Open, Trigram.Force, new [] { new HexagramLine(1, 268.25, 269.1875), new HexagramLine(2, 269.1875, 270.125), new HexagramLine(3, 270.125, 271.0625), new HexagramLine(4, 271.0625, 272), new HexagramLine(5, 272, 272.9375), new HexagramLine(6, 272.9375, 273.875) } ),
            new Hexagram(11, "Pervading", Trigram.Force, Trigram.Field, new [] { new HexagramLine(1, 262.625, 263.5625), new HexagramLine(2, 263.5625, 264.5), new HexagramLine(3, 264.5, 265.4375), new HexagramLine(4, 265.4375, 266.375), new HexagramLine(5, 266.375, 267.3125), new HexagramLine(6, 267.3125, 268.25) } ),
            new Hexagram(12, "Obstruction", Trigram.Field, Trigram.Force, new [] { new HexagramLine(1, 82.625, 83.5625), new HexagramLine(2, 83.5625, 84.5), new HexagramLine(3, 84.5, 85.4375), new HexagramLine(4, 85.4375, 86.375), new HexagramLine(5, 86.375, 87.3125), new HexagramLine(6, 87.3125, 88.25) } ),
            new Hexagram(13, "Concording People", Trigram.Radiance, Trigram.Force, new [] { new HexagramLine(1, 313.25, 314.1875), new HexagramLine(2, 314.1875, 315.125), new HexagramLine(3, 315.125, 316.0625), new HexagramLine(4, 316.0625, 317), new HexagramLine(5, 317, 317.9375), new HexagramLine(6, 317.9375, 318.875) } ),
            new Hexagram(14, "Great Possessing", Trigram.Force, Trigram.Radiance, new [] { new HexagramLine(1, 234.5, 235.4375), new HexagramLine(2, 235.4375, 236.375), new HexagramLine(3, 236.375, 237.3125), new HexagramLine(4, 237.3125, 238.25), new HexagramLine(5, 238.25, 239.1875), new HexagramLine(6, 239.1875, 240.125) } ),
            new Hexagram(15, "Humbling", Trigram.Bound, Trigram.Field, new [] { new HexagramLine(1, 88.25, 89.1875), new HexagramLine(2, 89.1875, 90.125), new HexagramLine(3, 90.125, 91.0625), new HexagramLine(4, 91.0625, 92), new HexagramLine(5, 92, 92.9375), new HexagramLine(6, 92.9375, 93.875) } ),
            new Hexagram(16, "Providing-For", Trigram.Field, Trigram.Shake, new [] { new HexagramLine(1, 65.75, 66.6875), new HexagramLine(2, 66.6875, 67.625), new HexagramLine(3, 67.625, 68.5625), new HexagramLine(4, 68.5625, 69.5), new HexagramLine(5, 69.5, 70.4375), new HexagramLine(6, 70.4375, 71.375) } ),
            new Hexagram(17, "Following", Trigram.Shake, Trigram.Open, new [] { new HexagramLine(1, 3.875, 4.8125), new HexagramLine(2, 4.8125, 5.75), new HexagramLine(3, 5.75, 6.6875), new HexagramLine(4, 6.6875, 7.625), new HexagramLine(5, 7.625, 8.5625), new HexagramLine(6, 8.5625, 9.5) } ),
            new Hexagram(18, "Correcting", Trigram.Ground, Trigram.Bound, new [] { new HexagramLine(1, 183.875, 184.8125), new HexagramLine(2, 184.8125, 185.75), new HexagramLine(3, 185.75, 186.6875), new HexagramLine(4, 186.6875, 187.625), new HexagramLine(5, 187.625, 188.5625), new HexagramLine(6, 188.5625, 189.5) } ),
            new Hexagram(19, "Nearing", Trigram.Open, Trigram.Field, new [] { new HexagramLine(1, 307.625, 308.5625), new HexagramLine(2, 308.5625, 309.5), new HexagramLine(3, 309.5, 310.4375), new HexagramLine(4, 310.4375, 311.375), new HexagramLine(5, 311.375, 312.3125), new HexagramLine(6, 312.3125, 313.25) } ),
            new Hexagram(20, "Viewing", Trigram.Field, Trigram.Ground, new [] { new HexagramLine(1, 60.125, 61.0625), new HexagramLine(2, 61.0625, 62), new HexagramLine(3, 62, 62.9375), new HexagramLine(4, 62.9375, 63.875), new HexagramLine(5, 63.875, 64.8125), new HexagramLine(6, 64.8125, 65.75) } ),
            new Hexagram(21, "Gnawing Bite", Trigram.Shake, Trigram.Radiance, new [] { new HexagramLine(1, 9.5, 10.4375), new HexagramLine(2, 10.4375, 11.375), new HexagramLine(3, 11.375, 12.3125), new HexagramLine(4, 12.3125, 13.25), new HexagramLine(5, 13.25, 14.1875), new HexagramLine(6, 14.1875, 15.125) } ),
            new Hexagram(22, "Adorning", Trigram.Radiance, Trigram.Bound, new [] { new HexagramLine(1, 347, 347.9375), new HexagramLine(2, 347.9375, 348.875), new HexagramLine(3, 348.875, 349.8125), new HexagramLine(4, 349.8125, 350.75), new HexagramLine(5, 350.75, 351.6875), new HexagramLine(6, 351.6875, 352.625) } ),
            new Hexagram(23, "Stripping", Trigram.Field, Trigram.Bound, new [] { new HexagramLine(1, 48.875, 49.8125), new HexagramLine(2, 49.8125, 50.75), new HexagramLine(3, 50.75, 51.6875), new HexagramLine(4, 51.6875, 52.625), new HexagramLine(5, 52.625, 53.5625), new HexagramLine(6, 53.5625, 54.5) } ),
            new Hexagram(24, "Returning", Trigram.Shake, Trigram.Field, new [] { new HexagramLine(1, 37.625, 38.5625), new HexagramLine(2, 38.5625, 39.5), new HexagramLine(3, 39.5, 40.4375), new HexagramLine(4, 40.4375, 41.375), new HexagramLine(5, 41.375, 42.3125), new HexagramLine(6, 42.3125, 43.25) } ),
            new Hexagram(25, "Without Embroiling", Trigram.Shake, Trigram.Force, new [] { new HexagramLine(1, 358.25, 359.1875), new HexagramLine(2, 359.1875, 0.125), new HexagramLine(3, 0.125, 1.0625), new HexagramLine(4, 1.0625, 2), new HexagramLine(5, 2, 2.9375), new HexagramLine(6, 2.9375, 3.875) } ),
            new Hexagram(26, "Great Accumulating", Trigram.Force, Trigram.Bound, new [] { new HexagramLine(1, 257, 257.9375), new HexagramLine(2, 257.9375, 258.875), new HexagramLine(3, 258.875, 259.8125), new HexagramLine(4, 259.8125, 260.75), new HexagramLine(5, 260.75, 261.6875), new HexagramLine(6, 261.6875, 262.625) } ),
            new Hexagram(27, "Swallowing", Trigram.Shake, Trigram.Bound, new [] { new HexagramLine(1, 32, 32.9375), new HexagramLine(2, 32.9375, 33.875), new HexagramLine(3, 33.875, 34.8125), new HexagramLine(4, 34.8125, 35.75), new HexagramLine(5, 35.75, 36.6875), new HexagramLine(6, 36.6875, 37.625) } ),
            new Hexagram(28, "Great Exceeding", Trigram.Ground, Trigram.Open, new [] { new HexagramLine(1, 212, 212.9375), new HexagramLine(2, 212.9375, 213.875), new HexagramLine(3, 213.875, 214.8125), new HexagramLine(4, 214.8125, 215.75), new HexagramLine(5, 215.75, 216.6875), new HexagramLine(6, 216.6875, 217.625) } ),
            new Hexagram(29, "Gorge", Trigram.Gorge, Trigram.Gorge, new [] { new HexagramLine(1, 144.5, 145.4375), new HexagramLine(2, 145.4375, 146.375), new HexagramLine(3, 146.375, 147.3125), new HexagramLine(4, 147.3125, 148.25), new HexagramLine(5, 148.25, 149.1875), new HexagramLine(6, 149.1875, 150.125) } ),
            new Hexagram(30, "Radiance", Trigram.Radiance, Trigram.Radiance, new [] { new HexagramLine(1, 324.5, 325.4375), new HexagramLine(2, 325.4375, 326.375), new HexagramLine(3, 326.375, 327.3125), new HexagramLine(4, 327.3125, 328.25), new HexagramLine(5, 328.25, 329.1875), new HexagramLine(6, 329.1875, 330.125) } ),
            new Hexagram(31, "Conjoining", Trigram.Bound, Trigram.Open, new [] { new HexagramLine(1, 122, 122.9375), new HexagramLine(2, 122.9375, 123.875), new HexagramLine(3, 123.875, 124.8125), new HexagramLine(4, 124.8125, 125.75), new HexagramLine(5, 125.75, 126.6875), new HexagramLine(6, 126.6875, 127.625) } ),
            new Hexagram(32, "Persevering", Trigram.Ground, Trigram.Shake, new [] { new HexagramLine(1, 200.75, 201.6875), new HexagramLine(2, 201.6875, 202.625), new HexagramLine(3, 202.625, 203.5625), new HexagramLine(4, 203.5625, 204.5), new HexagramLine(5, 204.5, 205.4375), new HexagramLine(6, 205.4375, 206.375) } ),
            new Hexagram(33, "Retiring", Trigram.Bound, Trigram.Force, new [] { new HexagramLine(1, 127.625, 128.5625), new HexagramLine(2, 128.5625, 129.5), new HexagramLine(3, 129.5, 130.4375), new HexagramLine(4, 130.4375, 131.375), new HexagramLine(5, 131.375, 132.3125), new HexagramLine(6, 132.3125, 133.25) } ),
            new Hexagram(34, "Great Invigorating", Trigram.Force, Trigram.Shake, new [] { new HexagramLine(1, 240.125, 241.0625), new HexagramLine(2, 241.0625, 242), new HexagramLine(3, 242, 242.9375), new HexagramLine(4, 242.9375, 243.875), new HexagramLine(5, 243.875, 244.8125), new HexagramLine(6, 244.8125, 245.75) } ),
            new Hexagram(35, "Prospering", Trigram.Field, Trigram.Radiance, new [] { new HexagramLine(1, 71.375, 72.3125), new HexagramLine(2, 72.3125, 73.25), new HexagramLine(3, 73.25, 74.1875), new HexagramLine(4, 74.1875, 75.125), new HexagramLine(5, 75.125, 76.0625), new HexagramLine(6, 76.0625, 77) } ),
            new Hexagram(36, "Darkening of the Light", Trigram.Radiance, Trigram.Field, new [] { new HexagramLine(1, 352.625, 353.5625), new HexagramLine(2, 353.5625, 354.5), new HexagramLine(3, 354.5, 355.4375), new HexagramLine(4, 355.4375, 356.375), new HexagramLine(5, 356.375, 357.3125), new HexagramLine(6, 357.3125, 358.25) } ),
            new Hexagram(37, "Dwelling People", Trigram.Radiance, Trigram.Ground, new [] { new HexagramLine(1, 335.75, 336.6875), new HexagramLine(2, 336.6875, 337.625), new HexagramLine(3, 337.625, 338.5625), new HexagramLine(4, 338.5625, 339.5), new HexagramLine(5, 339.5, 340.4375), new HexagramLine(6, 340.4375, 341.375) } ),
            new Hexagram(38, "Polarising", Trigram.Open, Trigram.Radiance, new [] { new HexagramLine(1, 279.5, 280.4375), new HexagramLine(2, 280.4375, 281.375), new HexagramLine(3, 281.375, 282.3125), new HexagramLine(4, 282.3125, 283.25), new HexagramLine(5, 283.25, 284.1875), new HexagramLine(6, 284.1875, 285.125) } ),
            new Hexagram(39, "Limping", Trigram.Bound, Trigram.Gorge, new [] { new HexagramLine(1, 99.5, 100.4375), new HexagramLine(2, 100.4375, 101.375), new HexagramLine(3, 101.375, 102.3125), new HexagramLine(4, 102.3125, 103.25), new HexagramLine(5, 103.25, 104.1875), new HexagramLine(6, 104.1875, 105.125) } ),
            new Hexagram(40, "Taking-Apart", Trigram.Gorge, Trigram.Shake, new [] { new HexagramLine(1, 155.75, 156.6875), new HexagramLine(2, 156.6875, 157.625), new HexagramLine(3, 157.625, 158.5625), new HexagramLine(4, 158.5625, 159.5), new HexagramLine(5, 159.5, 160.4375), new HexagramLine(6, 160.4375, 161.375) } ),
            new Hexagram(41, "Diminishing", Trigram.Open, Trigram.Bound, new [] { new HexagramLine(1, 302, 302.9375), new HexagramLine(2, 302.9375, 303.875), new HexagramLine(3, 303.875, 304.8125), new HexagramLine(4, 304.8125, 305.75), new HexagramLine(5, 305.75, 306.6875), new HexagramLine(6, 306.6875, 307.625) } ),
            new Hexagram(42, "Augmenting", Trigram.Shake, Trigram.Ground, new [] { new HexagramLine(1, 20.75, 21.6875), new HexagramLine(2, 21.6875, 22.625), new HexagramLine(3, 22.625, 23.5625), new HexagramLine(4, 23.5625, 24.5), new HexagramLine(5, 24.5, 25.4375), new HexagramLine(6, 25.4375, 26.375) } ),
            new Hexagram(43, "Displacement", Trigram.Force, Trigram.Open, new [] { new HexagramLine(1, 228.875, 229.8125), new HexagramLine(2, 229.8125, 230.75), new HexagramLine(3, 230.75, 231.6875), new HexagramLine(4, 231.6875, 232.625), new HexagramLine(5, 232.625, 233.5625), new HexagramLine(6, 233.5625, 234.5) } ),
            new Hexagram(44, "Coupling", Trigram.Ground, Trigram.Force, new [] { new HexagramLine(1, 217.625, 218.5625), new HexagramLine(2, 218.5625, 219.5), new HexagramLine(3, 219.5, 220.4375), new HexagramLine(4, 220.4375, 221.375), new HexagramLine(5, 221.375, 222.3125), new HexagramLine(6, 222.3125, 223.25) } ),
            new Hexagram(45, "Clustering", Trigram.Field, Trigram.Open, new [] { new HexagramLine(1, 77, 77.9375), new HexagramLine(2, 77.9375, 78.875), new HexagramLine(3, 78.875, 79.8125), new HexagramLine(4, 79.8125, 80.75), new HexagramLine(5, 80.75, 81.6875), new HexagramLine(6, 81.6875, 82.625) } ),
            new Hexagram(46, "Ascending", Trigram.Ground, Trigram.Field, new [] { new HexagramLine(1, 178.25, 179.1875), new HexagramLine(2, 179.1875, 180.125), new HexagramLine(3, 180.125, 181.0625), new HexagramLine(4, 181.0625, 182), new HexagramLine(5, 182, 182.9375), new HexagramLine(6, 182.9375, 183.875) } ),
            new Hexagram(47, "Confining", Trigram.Gorge, Trigram.Open, new [] { new HexagramLine(1, 167, 167.9375), new HexagramLine(2, 167.9375, 168.875), new HexagramLine(3, 168.875, 169.8125), new HexagramLine(4, 169.8125, 170.75), new HexagramLine(5, 170.75, 171.6875), new HexagramLine(6, 171.6875, 172.625) } ),
            new Hexagram(48, "Welling", Trigram.Ground, Trigram.Gorge, new [] { new HexagramLine(1, 189.5, 190.4375), new HexagramLine(2, 190.4375, 191.375), new HexagramLine(3, 191.375, 192.3125), new HexagramLine(4, 192.3125, 193.25), new HexagramLine(5, 193.25, 194.1875), new HexagramLine(6, 194.1875, 195.125) } ),
            new Hexagram(49, "Skinning", Trigram.Radiance, Trigram.Open, new [] { new HexagramLine(1, 318.875, 319.8125), new HexagramLine(2, 319.8125, 320.75), new HexagramLine(3, 320.75, 321.6875), new HexagramLine(4, 321.6875, 322.625), new HexagramLine(5, 322.625, 323.5625), new HexagramLine(6, 323.5625, 324.5) } ),
            new Hexagram(50, "Holding", Trigram.Ground, Trigram.Radiance, new [] { new HexagramLine(1, 206.375, 207.3125), new HexagramLine(2, 207.3125, 208.25), new HexagramLine(3, 208.25, 209.1875), new HexagramLine(4, 209.1875, 210.125), new HexagramLine(5, 210.125, 211.0625), new HexagramLine(6, 211.0625, 212) } ),
            new Hexagram(51, "Shake", Trigram.Shake, Trigram.Shake, new [] { new HexagramLine(1, 15.125, 16.0625), new HexagramLine(2, 16.0625, 17), new HexagramLine(3, 17, 17.9375), new HexagramLine(4, 17.9375, 18.875), new HexagramLine(5, 18.875, 19.8125), new HexagramLine(6, 19.8125, 20.75) } ),
            new Hexagram(52, "Bound", Trigram.Bound, Trigram.Bound, new [] { new HexagramLine(1, 93.875, 94.8125), new HexagramLine(2, 94.8125, 95.75), new HexagramLine(3, 95.75, 96.6875), new HexagramLine(4, 96.6875, 97.625), new HexagramLine(5, 97.625, 98.5625), new HexagramLine(6, 98.5625, 99.5) } ),
            new Hexagram(53, "Infiltrating", Trigram.Bound, Trigram.Ground, new [] { new HexagramLine(1, 105.125, 106.0625), new HexagramLine(2, 106.0625, 107), new HexagramLine(3, 107, 107.9375), new HexagramLine(4, 107.9375, 108.875), new HexagramLine(5, 108.875, 109.8125), new HexagramLine(6, 109.8125, 110.75) } ),
            new Hexagram(54, "Converting the Maiden", Trigram.Open, Trigram.Shake, new [] { new HexagramLine(1, 285.125, 286.0625), new HexagramLine(2, 286.0625, 287), new HexagramLine(3, 287, 287.9375), new HexagramLine(4, 287.9375, 288.875), new HexagramLine(5, 288.875, 289.8125), new HexagramLine(6, 289.8125, 290.75) } ),
            new Hexagram(55, "Abounding", Trigram.Radiance, Trigram.Shake, new [] { new HexagramLine(1, 330.125, 331.0625), new HexagramLine(2, 331.0625, 332), new HexagramLine(3, 332, 332.9375), new HexagramLine(4, 332.9375, 333.875), new HexagramLine(5, 333.875, 334.8125), new HexagramLine(6, 334.8125, 335.75) } ),
            new Hexagram(56, "Sojourning", Trigram.Bound, Trigram.Radiance, new [] { new HexagramLine(1, 116.375, 117.3125), new HexagramLine(2, 117.3125, 118.25), new HexagramLine(3, 118.25, 119.1875), new HexagramLine(4, 119.1875, 120.125), new HexagramLine(5, 120.125, 121.0625), new HexagramLine(6, 121.0625, 122) } ),
            new Hexagram(57, "Ground", Trigram.Ground, Trigram.Ground, new [] { new HexagramLine(1, 195.125, 196.0625), new HexagramLine(2, 196.0625, 197), new HexagramLine(3, 197, 197.9375), new HexagramLine(4, 197.9375, 198.875), new HexagramLine(5, 198.875, 199.8125), new HexagramLine(6, 199.8125, 200.75) } ),
            new Hexagram(58, "Open", Trigram.Open, Trigram.Open, new [] { new HexagramLine(1, 273.875, 274.8125), new HexagramLine(2, 274.8125, 275.75), new HexagramLine(3, 275.75, 276.6875), new HexagramLine(4, 276.6875, 277.625), new HexagramLine(5, 277.625, 278.5625), new HexagramLine(6, 278.5625, 279.5) } ),
            new Hexagram(59, "Dispersing", Trigram.Gorge, Trigram.Ground, new [] { new HexagramLine(1, 150.125, 151.0625), new HexagramLine(2, 151.0625, 152), new HexagramLine(3, 152, 152.9375), new HexagramLine(4, 152.9375, 153.875), new HexagramLine(5, 153.875, 154.8125), new HexagramLine(6, 154.8125, 155.75) } ),
            new Hexagram(60, "Articulating", Trigram.Open, Trigram.Gorge, new [] { new HexagramLine(1, 296.375, 297.3125), new HexagramLine(2, 297.3125, 298.25), new HexagramLine(3, 298.25, 299.1875), new HexagramLine(4, 299.1875, 300.125), new HexagramLine(5, 300.125, 301.0625), new HexagramLine(6, 301.0625, 302) } ),
            new Hexagram(61, "Center Returning", Trigram.Open, Trigram.Ground, new [] { new HexagramLine(1, 290.75, 291.6875), new HexagramLine(2, 291.6875, 292.625), new HexagramLine(3, 292.625, 293.5625), new HexagramLine(4, 293.5625, 294.5), new HexagramLine(5, 294.5, 295.4375), new HexagramLine(6, 295.4375, 296.375) } ),
            new Hexagram(62, "Small Exceeding", Trigram.Bound, Trigram.Shake, new [] { new HexagramLine(1, 110.75, 111.6875), new HexagramLine(2, 111.6875, 112.625), new HexagramLine(3, 112.625, 113.5625), new HexagramLine(4, 113.5625, 114.5), new HexagramLine(5, 114.5, 115.4375), new HexagramLine(6, 115.4375, 116.375) } ),
            new Hexagram(63, "Already Fording", Trigram.Radiance, Trigram.Gorge, new [] { new HexagramLine(1, 341.375, 342.3125), new HexagramLine(2, 342.3125, 343.25), new HexagramLine(3, 343.25, 344.1875), new HexagramLine(4, 344.1875, 345.125), new HexagramLine(5, 345.125, 346.0625), new HexagramLine(6, 346.0625, 347) } ),
            new Hexagram(64, "Not Yet Fording", Trigram.Gorge, Trigram.Radiance, new [] { new HexagramLine(1, 161.375, 162.3125), new HexagramLine(2, 162.3125, 163.25), new HexagramLine(3, 163.25, 164.1875), new HexagramLine(4, 164.1875, 165.125), new HexagramLine(5, 165.125, 166.0625), new HexagramLine(6, 166.0625, 167) } ),
        };

        public static IEnumerable<Hexagram> HexagramsByInnerTrigram =>
            Hexagrams.OrderBy(x => x.InnerTrigram).ThenBy(x => x.OuterTrigram);

        public static IEnumerable<Hexagram> HexagramsByOuterTrigram =>
            Hexagrams.OrderBy(x => x.OuterTrigram).ThenBy(x => x.InnerTrigram);


        public static IReadOnlyDictionary<int, double[]> LineStarts = new Dictionary<int, double[]>
        {
            { 1, new[] { 223.25, 224.1875, 225.125, 226.0625, 227, 227.9375 } },
            { 2, new[] { 43.25, 44.1875, 45.125, 46.0625, 47, 47.9375 } },
            { 3, new[] { 26.375, 27.3125, 28.25, 29.1875, 30.125, 31.0625 } },
            { 4, new[] { 138.875, 139.8125, 140.75, 141.6875, 142.625, 143.5625 } },
            { 5, new[] { 251.375, 252.3125, 253.25, 254.1875, 255.125, 256.0625 } },
            { 6, new[] { 172.625, 173.5625, 174.5, 175.4375, 176.375, 177.3125 } },
            { 7, new[] { 133.25, 134.1875, 135.125, 136.0625, 137, 137.9375 } },
            { 8, new[] { 54.5, 55.4375, 56.375, 57.3125, 58.25, 59.1875 } },
            { 9, new[] { 245.75, 246.6875, 247.625, 248.5625, 249.5, 250.4375 } },
            { 10, new[] { 268.25, 269.1875, 270.125, 271.0625, 272, 272.9375 } },
            { 11, new[] { 262.625, 263.5625, 264.5, 265.4375, 266.375, 267.3125 } },
            { 12, new[] { 82.625, 83.5625, 84.5, 85.4375, 86.375, 87.3125 } },
            { 13, new[] { 313.25, 314.1875, 315.125, 316.0625, 317, 317.9375 } },
            { 14, new[] { 234.5, 235.4375, 236.375, 237.3125, 238.25, 239.1875 } },
            { 15, new[] { 88.25, 89.1875, 90.125, 91.0625, 92, 92.9375 } },
            { 16, new[] { 65.75, 66.6875, 67.625, 68.5625, 69.5, 70.4375 } },
            { 17, new[] { 3.875, 4.8125, 5.75, 6.6875, 7.625, 8.5625 } },
            { 18, new[] { 183.875, 184.8125, 185.75, 186.6875, 187.625, 188.5625 } },
            { 19, new[] { 307.625, 308.5625, 309.5, 310.4375, 311.375, 312.3125 } },
            { 20, new[] { 60.125, 61.0625, 62, 62.9375, 63.875, 64.8125 } },
            { 21, new[] { 9.5, 10.4375, 11.375, 12.3125, 13.25, 14.1875 } },
            { 22, new[] { 347, 347.9375, 348.875, 349.8125, 350.75, 351.6875 } },
            { 23, new[] { 48.875, 49.8125, 50.75, 51.6875, 52.625, 53.5625 } },
            { 24, new[] { 37.625, 38.5625, 39.5, 40.4375, 41.375, 42.3125 } },
            { 25, new[] { 358.25, 359.1875, 0.125, 1.0625, 2, 2.9375 } },
            { 26, new[] { 257, 257.9375, 258.875, 259.8125, 260.75, 261.6875 } },
            { 27, new[] { 32, 32.9375, 33.875, 34.8125, 35.75, 36.6875 } },
            { 28, new[] { 212, 212.9375, 213.875, 214.8125, 215.75, 216.6875 } },
            { 29, new[] { 144.5, 145.4375, 146.375, 147.3125, 148.25, 149.1875 } },
            { 30, new[] { 324.5, 325.4375, 326.375, 327.3125, 328.25, 329.1875 } },
            { 31, new[] { 122, 122.9375, 123.875, 124.8125, 125.75, 126.6875 } },
            { 32, new[] { 200.75, 201.6875, 202.625, 203.5625, 204.5, 205.4375 } },
            { 33, new[] { 127.625, 128.5625, 129.5, 130.4375, 131.375, 132.3125 } },
            { 34, new[] { 240.125, 241.0625, 242, 242.9375, 243.875, 244.8125 } },
            { 35, new[] { 71.375, 72.3125, 73.25, 74.1875, 75.125, 76.0625 } },
            { 36, new[] { 352.625, 353.5625, 354.5, 355.4375, 356.375, 357.3125 } },
            { 37, new[] { 335.75, 336.6875, 337.625, 338.5625, 339.5, 340.4375 } },
            { 38, new[] { 279.5, 280.4375, 281.375, 282.3125, 283.25, 284.1875 } },
            { 39, new[] { 99.5, 100.4375, 101.375, 102.3125, 103.25, 104.1875 } },
            { 40, new[] { 155.75, 156.6875, 157.625, 158.5625, 159.5, 160.4375 } },
            { 41, new[] { 302, 302.9375, 303.875, 304.8125, 305.75, 306.6875 } },
            { 42, new[] { 20.75, 21.6875, 22.625, 23.5625, 24.5, 25.4375 } },
            { 43, new[] { 228.875, 229.8125, 230.75, 231.6875, 232.625, 233.5625 } },
            { 44, new[] { 217.625, 218.5625, 219.5, 220.4375, 221.375, 222.3125 } },
            { 45, new[] { 77, 77.9375, 78.875, 79.8125, 80.75, 81.6875 } },
            { 46, new[] { 178.25, 179.1875, 180.125, 181.0625, 182, 182.9375 } },
            { 47, new[] { 167, 167.9375, 168.875, 169.8125, 170.75, 171.6875 } },
            { 48, new[] { 189.5, 190.4375, 191.375, 192.3125, 193.25, 194.1875 } },
            { 49, new[] { 318.875, 319.8125, 320.75, 321.6875, 322.625, 323.5625 } },
            { 50, new[] { 206.375, 207.3125, 208.25, 209.1875, 210.125, 211.0625 } },
            { 51, new[] { 15.125, 16.0625, 17, 17.9375, 18.875, 19.8125 } },
            { 52, new[] { 93.875, 94.8125, 95.75, 96.6875, 97.625, 98.5625 } },
            { 53, new[] { 105.125, 106.0625, 107, 107.9375, 108.875, 109.8125 } },
            { 54, new[] { 285.125, 286.0625, 287, 287.9375, 288.875, 289.8125 } },
            { 55, new[] { 330.125, 331.0625, 332, 332.9375, 333.875, 334.8125 } },
            { 56, new[] { 116.375, 117.3125, 118.25, 119.1875, 120.125, 121.0625 } },
            { 57, new[] { 195.125, 196.0625, 197, 197.9375, 198.875, 199.8125 } },
            { 58, new[] { 273.875, 274.8125, 275.75, 276.6875, 277.625, 278.5625 } },
            { 59, new[] { 150.125, 151.0625, 152, 152.9375, 153.875, 154.8125 } },
            { 60, new[] { 296.375, 297.3125, 298.25, 299.1875, 300.125, 301.0625 } },
            { 61, new[] { 290.75, 291.6875, 292.625, 293.5625, 294.5, 295.4375 } },
            { 62, new[] { 110.75, 111.6875, 112.625, 113.5625, 114.5, 115.4375 } },
            { 63, new[] { 341.375, 342.3125, 343.25, 344.1875, 345.125, 346.0625 } },
            { 64, new[] { 161.375, 162.3125, 163.25, 164.1875, 165.125, 166.0625 } }
        };

        public static IReadOnlyDictionary<int, double[]> LineEnds = new Dictionary<int, double[]>
        {
            { 1, new[] { 224.1875, 225.125, 226.0625, 227, 227.9375, 228.875 } },
            { 2, new[] { 44.1875, 45.125, 46.0625, 47, 47.9375, 48.875 } },
            { 3, new[] { 27.3125, 28.25, 29.1875, 30.125, 31.0625, 32 } },
            { 4, new[] { 139.8125, 140.75, 141.6875, 142.625, 143.5625, 144.5 } },
            { 5, new[] { 252.3125, 253.25, 254.1875, 255.125, 256.0625, 257 } },
            { 6, new[] { 173.5625, 174.5, 175.4375, 176.375, 177.3125, 178.25 } },
            { 7, new[] { 134.1875, 135.125, 136.0625, 137, 137.9375, 138.875 } },
            { 8, new[] { 55.4375, 56.375, 57.3125, 58.25, 59.1875, 60.125 } },
            { 9, new[] { 246.6875, 247.625, 248.5625, 249.5, 250.4375, 251.375 } },
            { 10, new[] { 269.1875, 270.125, 271.0625, 272, 272.9375, 273.875 } },
            { 11, new[] { 263.5625, 264.5, 265.4375, 266.375, 267.3125, 268.25 } },
            { 12, new[] { 83.5625, 84.5, 85.4375, 86.375, 87.3125, 88.25 } },
            { 13, new[] { 314.1875, 315.125, 316.0625, 317, 317.9375, 318.875 } },
            { 14, new[] { 235.4375, 236.375, 237.3125, 238.25, 239.1875, 240.125 } },
            { 15, new[] { 89.1875, 90.125, 91.0625, 92, 92.9375, 93.875 } },
            { 16, new[] { 66.6875, 67.625, 68.5625, 69.5, 70.4375, 71.375 } },
            { 17, new[] { 4.8125, 5.75, 6.6875, 7.625, 8.5625, 9.5 } },
            { 18, new[] { 184.8125, 185.75, 186.6875, 187.625, 188.5625, 189.5 } },
            { 19, new[] { 308.5625, 309.5, 310.4375, 311.375, 312.3125, 313.25 } },
            { 20, new[] { 61.0625, 62, 62.9375, 63.875, 64.8125, 65.75 } },
            { 21, new[] { 10.4375, 11.375, 12.3125, 13.25, 14.1875, 15.125 } },
            { 22, new[] { 347.9375, 348.875, 349.8125, 350.75, 351.6875, 352.625 } },
            { 23, new[] { 49.8125, 50.75, 51.6875, 52.625, 53.5625, 54.5 } },
            { 24, new[] { 38.5625, 39.5, 40.4375, 41.375, 42.3125, 43.25 } },
            { 25, new[] { 359.1875, 0.125, 1.0625, 2, 2.9375, 3.875 } },
            { 26, new[] { 257.9375, 258.875, 259.8125, 260.75, 261.6875, 262.625 } },
            { 27, new[] { 32.9375, 33.875, 34.8125, 35.75, 36.6875, 37.625 } },
            { 28, new[] { 212.9375, 213.875, 214.8125, 215.75, 216.6875, 217.625 } },
            { 29, new[] { 145.4375, 146.375, 147.3125, 148.25, 149.1875, 150.125 } },
            { 30, new[] { 325.4375, 326.375, 327.3125, 328.25, 329.1875, 330.125 } },
            { 31, new[] { 122.9375, 123.875, 124.8125, 125.75, 126.6875, 127.625 } },
            { 32, new[] { 201.6875, 202.625, 203.5625, 204.5, 205.4375, 206.375 } },
            { 33, new[] { 128.5625, 129.5, 130.4375, 131.375, 132.3125, 133.25 } },
            { 34, new[] { 241.0625, 242, 242.9375, 243.875, 244.8125, 245.75 } },
            { 35, new[] { 72.3125, 73.25, 74.1875, 75.125, 76.0625, 77 } },
            { 36, new[] { 353.5625, 354.5, 355.4375, 356.375, 357.3125, 358.25 } },
            { 37, new[] { 336.6875, 337.625, 338.5625, 339.5, 340.4375, 341.375 } },
            { 38, new[] { 280.4375, 281.375, 282.3125, 283.25, 284.1875, 285.125 } },
            { 39, new[] { 100.4375, 101.375, 102.3125, 103.25, 104.1875, 105.125 } },
            { 40, new[] { 156.6875, 157.625, 158.5625, 159.5, 160.4375, 161.375 } },
            { 41, new[] { 302.9375, 303.875, 304.8125, 305.75, 306.6875, 307.625 } },
            { 42, new[] { 21.6875, 22.625, 23.5625, 24.5, 25.4375, 26.375 } },
            { 43, new[] { 229.8125, 230.75, 231.6875, 232.625, 233.5625, 234.5 } },
            { 44, new[] { 218.5625, 219.5, 220.4375, 221.375, 222.3125, 223.25 } },
            { 45, new[] { 77.9375, 78.875, 79.8125, 80.75, 81.6875, 82.625 } },
            { 46, new[] { 179.1875, 180.125, 181.0625, 182, 182.9375, 183.875 } },
            { 47, new[] { 167.9375, 168.875, 169.8125, 170.75, 171.6875, 172.625 } },
            { 48, new[] { 190.4375, 191.375, 192.3125, 193.25, 194.1875, 195.125 } },
            { 49, new[] { 319.8125, 320.75, 321.6875, 322.625, 323.5625, 324.5 } },
            { 50, new[] { 207.3125, 208.25, 209.1875, 210.125, 211.0625, 212 } },
            { 51, new[] { 16.0625, 17, 17.9375, 18.875, 19.8125, 20.75 } },
            { 52, new[] { 94.8125, 95.75, 96.6875, 97.625, 98.5625, 99.5 } },
            { 53, new[] { 106.0625, 107, 107.9375, 108.875, 109.8125, 110.75 } },
            { 54, new[] { 286.0625, 287, 287.9375, 288.875, 289.8125, 290.75 } },
            { 55, new[] { 331.0625, 332, 332.9375, 333.875, 334.8125, 335.75 } },
            { 56, new[] { 117.3125, 118.25, 119.1875, 120.125, 121.0625, 122 } },
            { 57, new[] { 196.0625, 197, 197.9375, 198.875, 199.8125, 200.75 } },
            { 58, new[] { 274.8125, 275.75, 276.6875, 277.625, 278.5625, 279.5 } },
            { 59, new[] { 151.0625, 152, 152.9375, 153.875, 154.8125, 155.75 } },
            { 60, new[] { 297.3125, 298.25, 299.1875, 300.125, 301.0625, 302 } },
            { 61, new[] { 291.6875, 292.625, 293.5625, 294.5, 295.4375, 296.375 } },
            { 62, new[] { 111.6875, 112.625, 113.5625, 114.5, 115.4375, 116.375 } },
            { 63, new[] { 342.3125, 343.25, 344.1875, 345.125, 346.0625, 347 } },
            { 64, new[] { 162.3125, 163.25, 164.1875, 165.125, 166.0625, 167 } },
        };

        public static IReadOnlyDictionary<int, string> FillColors = new Dictionary<int, string>
        {
            { 1, "#fef200" },
            { 2, "#4ec0e5" },
            { 3, "#0ba14a" },
            { 4, "#aed578" },
            { 5, "#0572ab" },
            { 6, "#94c6e1" },
            { 7, "#f5eb89" },
            { 8, "#fcba63" },
            { 9, "#fee8dd" },
            { 10, "#c3b59b" },
            { 11, "#c9ccc3" },
            { 12, "#9e76b4" },
            { 13, "#d8df20" },
            { 14, "#ef3e36" },
            { 15, "#aa9a00" },
            { 16, "#c9262b" },
            { 17, "#ebd400" },
            { 18, "#9d1b7b" },
            { 19, "#ada8d1" },
            { 20, "#fcb040" },
            { 21, "#fef200" },
            { 22, "#a0a5cf" },
            { 23, "#f26642" },
            { 24, "#aa78b5" },
            { 25, "#c4996c" },
            { 26, "#0a9775" },
            { 27, "#2384c8" },
            { 28, "#d68c73" },
            { 29, "#f69680" },
            { 30, "#f7941d" },
            { 31, "#c9262b" },
            { 32, "#eb907b" },
            { 33, "#ed207b" },
            { 34, "#96aacd" },
            { 35, "#ed207b" },
            { 36, "#f04e37" },
            { 37, "#d8c6b8" },
            { 38, "#d8df20" },
            { 39, "#fff66d" },
            { 40, "#ae2386" },
            { 41, "#34aab6" },
            { 42, "#f57955" },
            { 43, "#a15b41" },
            { 44, "#f1592a" },
            { 45, "#96578e" },
            { 46, "#ffe900" },
            { 47, "#378ab6" },
            { 48, "#d391bf" },
            { 49, "#01aef0" },
            { 50, "#8c5e3c" },
            { 51, "#a0c14e" },
            { 52, "#d391bf" },
            { 53, "#8cc63e" },
            { 54, "#f598ab" },
            { 55, "#aed578" },
            { 56, "#0b9444" },
            { 57, "#2bb673" },
            { 58, "#fedbb5" },
            { 59, "#39b549" },
            { 60, "#ee2277" },
            { 61, "#aed578" },
            { 62, "#962f33" },
            { 63, "#057f46" },
            { 64, "#a01f62" },
        };
    }
}
